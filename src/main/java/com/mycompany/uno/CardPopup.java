/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.uno;

import Card.Card;
import Pile.DiscardPile;
import Player.Player;
import java.awt.Font;
import static java.lang.Thread.sleep;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;


public class CardPopup extends javax.swing.JFrame {
    
    public String color;
    public String attr;
    DiscardPile discardPile;
    int index;
    Player player;
    ChooseColor cwindow;
    Game game;
    /**
     * Creates new form CardPopup
     */
    public CardPopup() {
        initComponents();
    }
    public CardPopup(Player player,Game game,String color,String attr,DiscardPile discardPile,int index) {
        initComponents();
        this.color=color;
        this.attr=attr;
        this.discardPile = discardPile;
        this.index=index;
        this.player = player;
        this.game=game;
        card.setIcon(new javax.swing.ImageIcon("/Users/ujjwaljain/Desktop/sprites/"+color+"_"+attr+".png"));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancel = new javax.swing.JButton();
        usecard = new javax.swing.JButton();
        card = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cancel.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        cancel.setText("CANCEL");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        usecard.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        usecard.setText("USE");
        usecard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usecardActionPerformed(evt);
            }
        });

        card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(169, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(card, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(97, 97, 97)
                    .addComponent(usecard, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(348, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(card, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(500, Short.MAX_VALUE)
                    .addComponent(usecard, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(38, 38, 38)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void cardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardActionPerformed
//        card.setIcon(new javax.swing.ImageIcon("/Users/ujjwaljain/Desktop/sprites/"+color+"_"+attr+".png"));
    }//GEN-LAST:event_cardActionPerformed

    private void usecardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usecardActionPerformed
        // TODO add your handling code here:
        Card topcard = discardPile.returnTopCard();
        boolean flag = true;
        switch(topcard.getCardDetails()){
            case "drawtwo":
                if((topcard.getCardColor().equals(color) && (attr.equals("skip") || attr.equals("reverse"))) || (attr.equals("drawtwo")) || (attr.equals("drawfour"))){
                    player.removeCard(discardPile, index);
                    if(player.numCardsLeft()==0){
                        JLabel message = new JLabel("Winner: "+player.getPlayerName());
                        message.setFont(new Font("Arial",Font.BOLD,36));
                        JOptionPane.showMessageDialog(null, message);
                        System.exit(0);
                    }
                    this.dispose();
                    game.dispose();
                }
                else{
                    JLabel message = new JLabel("Unusable Card!!!");
                    message.setFont(new Font("Arial",Font.BOLD,36));
                    JOptionPane.showMessageDialog(null, message);
                    
                }
                break;
            case "skip":
                if((attr.equals("skip"))){
                    player.removeCard(discardPile,index);
                    if(player.numCardsLeft()==0){
                        JLabel message = new JLabel("Winner: "+player.getPlayerName());
                        message.setFont(new Font("Arial",Font.BOLD,36));
                        JOptionPane.showMessageDialog(null, message);
                        System.exit(0);
                    }
                    this.dispose();
                    game.dispose();

//                    flag = false;
                }
                else{
                    JLabel message = new JLabel("Unusable Card!!!");
                    message.setFont(new Font("Arial",Font.BOLD,36));
                    JOptionPane.showMessageDialog(null, message);
                }
                break;
            case "drawfour":
                JLabel msg = new JLabel("Draw Four Cards!!!");
                msg.setFont(new Font("Arial",Font.BOLD,36));
                JOptionPane.showMessageDialog(null, msg);
                this.dispose();
                break;
            default:
                if((topcard.getCardColor().equals(color)||topcard.getCardDetails().equals(attr))||color.equals("wild")){
                    player.removeCard(discardPile, index);
                    if(player.numCardsLeft()==0){
                        JLabel message = new JLabel("Winner: "+player.getPlayerName());
                        message.setFont(new Font("Arial",Font.BOLD,36));
                        JOptionPane.showMessageDialog(null, message);
                        System.exit(0);
                    }
                    this.dispose();
                    game.dispose();

                }
                else{
                    JLabel message = new JLabel("Unusable Card!!!");
                    message.setFont(new Font("Arial",Font.BOLD,36));
                    JOptionPane.showMessageDialog(null, message);
                }
                
        }   
        this.dispose();
        
    }//GEN-LAST:event_usecardActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CardPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CardPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CardPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CardPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CardPopup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton card;
    private javax.swing.JButton usecard;
    // End of variables declaration//GEN-END:variables
}
